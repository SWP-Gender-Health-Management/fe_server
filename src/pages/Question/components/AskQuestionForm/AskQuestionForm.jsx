import React from 'react';
import { Button } from 'antd';
import { SendOutlined, ReloadOutlined } from '@ant-design/icons';
import { Input } from 'antd';
import HospitalInfo from '@components/Info/HospitalInfo';
import './AskQuestionForm.css';

const { TextArea } = Input;

const AskQuestionForm = ({
  newQuestion,
  setNewQuestion,
  isSubmitting,
  onSubmit,
  onClear,
}) => {
  return (
    <div className="ask-question-section">
      <div className="form-container">
        <div className="form-header">
          <div className="header-icon-large">üí¨</div>
          <h2 style={{ fontSize: '28px', fontWeight: 'bold' }}>
            ƒê·∫∑t c√¢u h·ªèi cho chuy√™n gia
          </h2>
          <p style={{ fontSize: '18px', lineHeight: '1.6' }}>
            Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n 24/7. H√£y chia s·∫ª v·∫•n ƒë·ªÅ ƒë·ªÉ nh·∫≠n
            ƒë∆∞·ª£c l·ªùi t∆∞ v·∫•n t·ªët nh·∫•t!
          </p>
        </div>

        <div className="question-form">
          <div className="form-step fade-in">
            <div className="step-header">
              <h3 style={{ fontSize: '24px', fontWeight: 'bold' }}>
                üìã M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ
              </h3>
              <p style={{ fontSize: '16px', lineHeight: '1.5' }}>
                C√†ng chi ti·∫øt, b√°c sƒ© c√†ng c√≥ th·ªÉ t∆∞ v·∫•n ch√≠nh x√°c cho b·∫°n
              </p>
            </div>

            <div className="description-helper">
              <h4 style={{ fontSize: '18px', fontWeight: 'bold' }}>
                üí° G·ª£i √Ω nh·ªØng th√¥ng tin n√™n bao g·ªìm:
              </h4>
              <div className="helper-tags">
                <div
                  className="helper-tag"
                  style={{ fontSize: '14px', padding: '8px 12px' }}
                  onClick={() => {
                    const current = newQuestion.content;
                    const addition = current
                      ? '\n‚Ä¢ Tri·ªáu ch·ª©ng: '
                      : '‚Ä¢ Tri·ªáu ch·ª©ng: ';
                    setNewQuestion({
                      ...newQuestion,
                      content: current + addition,
                    });
                  }}
                >
                  üî∏ Tri·ªáu ch·ª©ng c·ª• th·ªÉ
                </div>
                <div
                  className="helper-tag"
                  style={{ fontSize: '14px', padding: '8px 12px' }}
                  onClick={() => {
                    const current = newQuestion.content;
                    const addition = current
                      ? '\n‚Ä¢ Th·ªùi gian: '
                      : '‚Ä¢ Th·ªùi gian: ';
                    setNewQuestion({
                      ...newQuestion,
                      content: current + addition,
                    });
                  }}
                >
                  ‚è∞ Th·ªùi gian xu·∫•t hi·ªán
                </div>
                <div
                  className="helper-tag"
                  style={{ fontSize: '14px', padding: '8px 12px' }}
                  onClick={() => {
                    const current = newQuestion.content;
                    const addition = current ? '\n‚Ä¢ M·ª©c ƒë·ªô: ' : '‚Ä¢ M·ª©c ƒë·ªô: ';
                    setNewQuestion({
                      ...newQuestion,
                      content: current + addition,
                    });
                  }}
                >
                  üìä M·ª©c ƒë·ªô nghi√™m tr·ªçng
                </div>
                <div
                  className="helper-tag"
                  style={{ fontSize: '14px', padding: '8px 12px' }}
                  onClick={() => {
                    const current = newQuestion.content;
                    const addition = current
                      ? '\n‚Ä¢ Thu·ªëc ƒëang d√πng: '
                      : '‚Ä¢ Thu·ªëc ƒëang d√πng: ';
                    setNewQuestion({
                      ...newQuestion,
                      content: current + addition,
                    });
                  }}
                >
                  üíä Thu·ªëc ƒëang s·ª≠ d·ª•ng
                </div>
              </div>
            </div>

            <div className="textarea-container">
              <TextArea
                placeholder="V√≠ d·ª•: T√¥i b·ªã ƒëau ƒë·∫ßu t·ª´ 3 ng√†y nay, ƒëau √¢m ·ªâ ·ªü v√πng th√°i d∆∞∆°ng, tƒÉng n·∫∑ng v√†o bu·ªïi chi·ªÅu. Kh√¥ng c√≥ s·ªët, ƒÉn u·ªëng b√¨nh th∆∞·ªùng. Tr∆∞·ªõc ƒë√¢y ch∆∞a t·ª´ng b·ªã nh∆∞ v·∫≠y..."
                value={newQuestion.content}
                onChange={(e) =>
                  setNewQuestion({
                    ...newQuestion,
                    content: e.target.value,
                  })
                }
                maxLength={1000}
                className="form-textarea-enhanced"
                autoSize={{ minRows: 6, maxRows: 16 }}
                style={{
                  fontSize: '16px',
                  lineHeight: '1.6',
                  padding: '16px',
                  borderRadius: '8px',
                }}
              />
              <div className="textarea-footer">
                <span className="char-counter" style={{ fontSize: '14px' }}>
                  {newQuestion.content.length}/1000 k√Ω t·ª±
                </span>
                {newQuestion.content.length >= 50 && (
                  <span
                    className="validation-success"
                    style={{ fontSize: '14px' }}
                  >
                    ‚úì M√¥ t·∫£ chi ti·∫øt t·ªët!
                  </span>
                )}
              </div>
            </div>
          </div>

          {/* Submit Section */}
          {newQuestion.content && (
            <div className="submit-section fade-in">
              <div className="submit-preview">
                <h4 style={{ fontSize: '18px', fontWeight: 'bold' }}>
                  üîç Xem l·∫°i c√¢u h·ªèi c·ªßa b·∫°n:
                </h4>
                <div className="preview-card">
                  <div
                    className="preview-content"
                    style={{
                      fontSize: '15px',
                      lineHeight: '1.5',
                      whiteSpace: 'pre-wrap',
                      wordBreak: 'break-word',
                      overflow: 'hidden',
                      padding: '12px 0',
                    }}
                  >
                    {newQuestion.content}
                  </div>
                </div>
              </div>

              <div className="form-actions">
                <Button
                  type="primary"
                  size="large"
                  onClick={onSubmit}
                  loading={isSubmitting}
                  icon={<SendOutlined />}
                  className="submit-button-enhanced"
                  style={{
                    fontSize: '16px',
                    height: '50px',
                    fontWeight: 'bold',
                  }}
                  disabled={!newQuestion.content.trim()}
                >
                  {isSubmitting ? 'ƒêang g·ª≠i c√¢u h·ªèi...' : 'üöÄ G·ª≠i c√¢u h·ªèi ngay'}
                </Button>
                <Button
                  size="large"
                  onClick={onClear}
                  className="clear-button"
                  style={{
                    fontSize: '16px',
                    height: '50px',
                  }}
                  icon={<ReloadOutlined />}
                >
                  L√†m m·ªõi form
                </Button>
              </div>

              <div className="confidence-note">
                <div className="confidence-icon">üõ°Ô∏è</div>
                <div
                  className="confidence-text"
                  style={{ fontSize: '15px', lineHeight: '1.5' }}
                >
                  <strong>An t√¢m tuy·ªát ƒë·ªëi:</strong> Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o
                  m·∫≠t ho√†n to√†n. Ch√∫ng t√¥i cam k·∫øt ph·∫£n h·ªìi trong v√≤ng 2-4 gi·ªù
                  l√†m vi·ªác.
                </div>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Hospital Info */}
      <div style={{ marginTop: '40px' }}>
        <HospitalInfo />
      </div>
    </div>
  );
};

export default AskQuestionForm;
