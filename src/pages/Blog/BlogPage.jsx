import React, { useState } from 'react';
import { Input } from '@components/ui/input';
import { Button } from '@components/ui/button';
import './BlogPage.css';

const posts = [
  // B·ªánh n·ªØ khoa
  {
    id: 1,
    title: 'Vi√™m √¢m ƒë·∫°o: Nguy√™n nh√¢n, tri·ªáu ch·ª©ng v√† c√°ch ƒëi·ªÅu tr·ªã hi·ªáu qu·∫£',
    excerpt:
      'Vi√™m √¢m ƒë·∫°o l√† b·ªánh ph·ª• khoa ph·ªï bi·∫øn ·ªü ph·ª• n·ªØ. Hi·ªÉu r√µ nguy√™n nh√¢n v√† c√°ch ƒëi·ªÅu tr·ªã ƒë·ªÉ b·∫£o v·ªá s·ª©c kh·ªèe sinh s·∫£n.',
    category: 'B·ªánh n·ªØ khoa',
    time: '2 ng√†y tr∆∞·ªõc',
    readTime: '5 ph√∫t ƒë·ªçc',
    author: 'BS. Nguy·ªÖn Th·ªã H·∫°nh',
    views: '2.3k',
    img: 'https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=600',
    tags: ['Vi√™m √¢m ƒë·∫°o', 'Ph·ª• khoa', 'ƒêi·ªÅu tr·ªã'],
  },
  {
    id: 2,
    title: 'R·ªëi lo·∫°n kinh nguy·ªát: D·∫•u hi·ªáu c·∫£nh b√°o kh√¥ng th·ªÉ b·ªè qua',
    excerpt:
      'Kinh nguy·ªát kh√¥ng ƒë·ªÅu c√≥ th·ªÉ l√† d·∫•u hi·ªáu c·ªßa nhi·ªÅu v·∫•n ƒë·ªÅ s·ª©c kh·ªèe nghi√™m tr·ªçng. T√¨m hi·ªÉu khi n√†o c·∫ßn ƒëi kh√°m.',
    category: 'B·ªánh n·ªØ khoa',
    time: '1 ng√†y tr∆∞·ªõc',
    readTime: '4 ph√∫t ƒë·ªçc',
    author: 'BS. L√™ Th·ªã Mai',
    views: '1.8k',
    img: 'https://images.unsplash.com/photo-1594824154122-864b3c99f1a0?w=600',
    tags: ['Kinh nguy·ªát', 'R·ªëi lo·∫°n', 'Hormone'],
  },
  {
    id: 3,
    title: 'U x∆° t·ª≠ cung: Nh·ªØng ƒëi·ªÅu ph·ª• n·ªØ c·∫ßn bi·∫øt ƒë·ªÉ ph√≤ng tr√°nh',
    excerpt:
      'U x∆° t·ª≠ cung ·∫£nh h∆∞·ªüng ƒë·∫øn kh·∫£ nƒÉng sinh s·∫£n. Kh√°m ph√° c√°c ph∆∞∆°ng ph√°p ph√≤ng ng·ª´a v√† ƒëi·ªÅu tr·ªã hi·ªán ƒë·∫°i.',
    category: 'B·ªánh n·ªØ khoa',
    time: '3 ng√†y tr∆∞·ªõc',
    readTime: '7 ph√∫t ƒë·ªçc',
    author: 'BS. Tr·∫ßn Minh Ch√¢u',
    views: '3.1k',
    img: 'https://images.unsplash.com/photo-1582750433449-648ed127bb54?w=600',
    tags: ['U x∆° t·ª≠ cung', 'Sinh s·∫£n', 'Ph√≤ng ng·ª´a'],
  },

  // B·ªánh nam khoa
  {
    id: 4,
    title: 'Y·∫øu sinh l√Ω nam gi·ªõi: Nguy√™n nh√¢n v√† gi·∫£i ph√°p ƒëi·ªÅu tr·ªã',
    excerpt:
      'R·ªëi lo·∫°n c∆∞∆°ng d∆∞∆°ng ·∫£nh h∆∞·ªüng ƒë·∫øn ch·∫•t l∆∞·ª£ng cu·ªôc s·ªëng. T√¨m hi·ªÉu c√°c ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã an to√†n v√† hi·ªáu qu·∫£.',
    category: 'B·ªánh nam khoa',
    time: '1 ng√†y tr∆∞·ªõc',
    readTime: '6 ph√∫t ƒë·ªçc',
    author: 'BS. Ph·∫°m VƒÉn ƒê·ª©c',
    views: '4.2k',
    img: 'https://images.unsplash.com/photo-1582750433449-648ed127bb54?w=600',
    tags: ['Sinh l√Ω nam', 'ED', 'ƒêi·ªÅu tr·ªã'],
  },
  {
    id: 5,
    title: 'Vi√™m tuy·∫øn ti·ªÅn li·ªát: Tri·ªáu ch·ª©ng v√† c√°ch ph√≤ng ng·ª´a',
    excerpt:
      'Vi√™m tuy·∫øn ti·ªÅn li·ªát ng√†y c√†ng ph·ªï bi·∫øn ·ªü nam gi·ªõi tr·∫ª. Nh·∫≠n bi·∫øt s·ªõm ƒë·ªÉ c√≥ ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã k·ªãp th·ªùi.',
    category: 'B·ªánh nam khoa',
    time: '4 ng√†y tr∆∞·ªõc',
    readTime: '5 ph√∫t ƒë·ªçc',
    author: 'BS. Ho√†ng Minh Tu·∫•n',
    views: '2.9k',
    img: 'https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?w=600',
    tags: ['Tuy·∫øn ti·ªÅn li·ªát', 'Vi√™m nhi·ªÖm', 'Nam khoa'],
  },
  {
    id: 6,
    title: 'V√¥ sinh nam: Nguy√™n nh√¢n v√† ph∆∞∆°ng ph√°p h·ªó tr·ª£ sinh s·∫£n',
    excerpt:
      'V√¥ sinh nam chi·∫øm 40% c√°c tr∆∞·ªùng h·ª£p v√¥ sinh. T√¨m hi·ªÉu v·ªÅ c√°c k·ªπ thu·∫≠t h·ªó tr·ª£ sinh s·∫£n hi·ªán ƒë·∫°i.',
    category: 'B·ªánh nam khoa',
    time: '5 ng√†y tr∆∞·ªõc',
    readTime: '8 ph√∫t ƒë·ªçc',
    author: 'BS. Nguy·ªÖn VƒÉn Th√†nh',
    views: '3.7k',
    img: 'https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=600',
    tags: ['V√¥ sinh', 'Sinh s·∫£n', 'IVF'],
  },

  // B·ªánh l√¢y qua ƒë∆∞·ªùng t√¨nh d·ª•c
  {
    id: 7,
    title: 'HIV/AIDS: Ph√≤ng ng·ª´a v√† ƒëi·ªÅu tr·ªã trong th·ªùi ƒë·∫°i m·ªõi',
    excerpt:
      'Nh·ªØng ti·∫øn b·ªô m·ªõi trong ƒëi·ªÅu tr·ªã HIV gi√∫p ng∆∞·ªùi b·ªánh s·ªëng kh·ªèe m·∫°nh. C·∫≠p nh·∫≠t ki·∫øn th·ª©c v·ªÅ ph√≤ng ch·ªëng HIV.',
    category: 'B·ªánh t√¨nh d·ª•c',
    time: '2 ng√†y tr∆∞·ªõc',
    readTime: '6 ph√∫t ƒë·ªçc',
    author: 'BS. L√™ VƒÉn H·∫£i',
    views: '5.1k',
    img: 'https://images.unsplash.com/photo-1576091160550-2173dba999ef?w=600',
    tags: ['HIV', 'AIDS', 'Ph√≤ng ng·ª´a'],
  },
  {
    id: 8,
    title: 'Giang mai: Tri·ªáu ch·ª©ng, ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã',
    excerpt:
      'Giang mai c√≥ th·ªÉ ƒëi·ªÅu tr·ªã kh·ªèi ho√†n to√†n n·∫øu ph√°t hi·ªán s·ªõm. T√¨m hi·ªÉu v·ªÅ c√°c giai ƒëo·∫°n v√† ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã.',
    category: 'B·ªánh t√¨nh d·ª•c',
    time: '3 ng√†y tr∆∞·ªõc',
    readTime: '4 ph√∫t ƒë·ªçc',
    author: 'BS. Tr·∫ßn Th·ªã Lan',
    views: '2.8k',
    img: 'https://images.unsplash.com/photo-1582750433449-648ed127bb54?w=600',
    tags: ['Giang mai', 'STD', 'Ch·∫©n ƒëo√°n'],
  },
  {
    id: 9,
    title: 'HPV v√† ung th∆∞ c·ªï t·ª≠ cung: T·∫ßm so√°t v√† ph√≤ng ng·ª´a',
    excerpt:
      'Virus HPV l√† nguy√™n nh√¢n ch√≠nh g√¢y ung th∆∞ c·ªï t·ª≠ cung. Vaccine HPV c√≥ th·ªÉ ph√≤ng ng·ª´a hi·ªáu qu·∫£.',
    category: 'B·ªánh t√¨nh d·ª•c',
    time: '1 tu·∫ßn tr∆∞·ªõc',
    readTime: '7 ph√∫t ƒë·ªçc',
    author: 'BS. Ph·∫°m Th·ªã H∆∞∆°ng',
    views: '4.6k',
    img: 'https://images.unsplash.com/photo-1559757175-0eb30cd8c063?w=600',
    tags: ['HPV', 'Ung th∆∞', 'Vaccine'],
  },
  {
    id: 10,
    title: 'L·∫≠u v√† chlamydia: Hai b·ªánh t√¨nh d·ª•c th·∫ßm l·∫∑ng',
    excerpt:
      'Nhi·ªÅu tr∆∞·ªùng h·ª£p l·∫≠u v√† chlamydia kh√¥ng c√≥ tri·ªáu ch·ª©ng r√µ r√†ng, d·∫´n ƒë·∫øn bi·∫øn ch·ª©ng nghi√™m tr·ªçng.',
    category: 'B·ªánh t√¨nh d·ª•c',
    time: '1 tu·∫ßn tr∆∞·ªõc',
    readTime: '5 ph√∫t ƒë·ªçc',
    author: 'BS. ƒê·ªó VƒÉn Nam',
    views: '3.4k',
    img: 'https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=600',
    tags: ['L·∫≠u', 'Chlamydia', 'STI'],
  },
];

const categories = [
  { id: 'all', name: 'T·∫•t c·∫£', icon: 'üì∞', count: posts.length },
  {
    id: 'B·ªánh n·ªØ khoa',
    name: 'B·ªánh n·ªØ khoa',
    icon: 'üå∏',
    count: posts.filter((p) => p.category === 'B·ªánh n·ªØ khoa').length,
  },
  {
    id: 'B·ªánh nam khoa',
    name: 'B·ªánh nam khoa',
    icon: 'üë®‚Äç‚öïÔ∏è',
    count: posts.filter((p) => p.category === 'B·ªánh nam khoa').length,
  },
  {
    id: 'B·ªánh t√¨nh d·ª•c',
    name: 'B·ªánh t√¨nh d·ª•c',
    icon: 'üõ°Ô∏è',
    count: posts.filter((p) => p.category === 'B·ªánh t√¨nh d·ª•c').length,
  },
];

export default function BlogPage() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchText, setSearchText] = useState('');
  const [currentPage, setCurrentPage] = useState(1);
  const postsPerPage = 6;

  const filteredPosts = posts.filter(
    (post) =>
      (selectedCategory === 'all' || post.category === selectedCategory) &&
      (post.title.toLowerCase().includes(searchText.toLowerCase()) ||
        post.excerpt.toLowerCase().includes(searchText.toLowerCase()) ||
        post.tags.some((tag) =>
          tag.toLowerCase().includes(searchText.toLowerCase())
        ))
  );

  const totalPages = Math.ceil(filteredPosts.length / postsPerPage);
  const currentPosts = filteredPosts.slice(
    (currentPage - 1) * postsPerPage,
    currentPage * postsPerPage
  );

  const featuredPost = posts[0];

  return (
    <div>
      <div className="blog-container">
        <div className="sidebar">
          <h2 className="sidebar-title">Ph√¢n lo·∫°i</h2>
          <ul className="category-list">
            {categories.map((category) => (
              <li
                key={category}
                className={`category-item ${
                  selectedCategory === category ? 'active' : ''
                }`}
                onClick={() => {
                  setSelectedCategory(category);
                  setCurrentPage(1);
                }}
              >
                {category}
              </li>
            ))}
          </ul>
        </div>
        <div className="main-content">
          <h1 className="page-title">Tin t·ª©c</h1>
          <div className="search-bar">
            <Input
              type="text"
              placeholder="T√¨m ki·∫øm b√†i vi·∫øt, ch·ªß ƒë·ªÅ..."
              value={searchText}
              onChange={(e) => {
                setSearchText(e.target.value);
                setCurrentPage(1);
              }}
              className="hero-search-input"
            />
            <Button className="hero-search-btn">
              <i className="search-icon">üîç</i>
            </Button>
          </div>
        </div>
      </div>

      <div className="blog-container">
        {/* Sidebar */}
        <aside className="blog-sidebar">
          <div className="sidebar-section">
            <h3 className="sidebar-title">Chuy√™n m·ª•c</h3>
            <div className="category-list">
              {categories.map((category) => (
                <div
                  key={category.id}
                  className={`category-item ${
                    selectedCategory === category.id ? 'active' : ''
                  }`}
                  onClick={() => {
                    setSelectedCategory(category.id);
                    setCurrentPage(1);
                  }}
                >
                  <span className="category-icon">{category.icon}</span>
                  <span className="category-name">{category.name}</span>
                  <span className="category-count">({category.count})</span>
                </div>
              ))}
            </div>
          </div>

          {/* Featured Post */}
          <div className="sidebar-section">
            <h3 className="sidebar-title">B√†i vi·∫øt n·ªïi b·∫≠t</h3>
            <div className="featured-post">
              <img
                src={featuredPost.img}
                alt={featuredPost.title}
                className="featured-img"
              />
              <div className="featured-content">
                <span className="featured-category">
                  {featuredPost.category}
                </span>
                <h4 className="featured-title">{featuredPost.title}</h4>
                <div className="featured-meta">
                  <span className="featured-author">{featuredPost.author}</span>
                  <span className="featured-views">
                    {featuredPost.views} l∆∞·ª£t xem
                  </span>
                </div>
              </div>
            </div>
          </div>

          {/* Newsletter */}
          <div className="sidebar-section">
            <h3 className="sidebar-title">ƒêƒÉng k√Ω nh·∫≠n tin</h3>
            <p className="newsletter-text">
              Nh·∫≠n tin t·ª©c s·ª©c kh·ªèe m·ªõi nh·∫•t qua email
            </p>
            <div className="newsletter-form">
              <Input placeholder="Email c·ªßa b·∫°n" className="newsletter-input" />
              <Button className="newsletter-btn">ƒêƒÉng k√Ω</Button>
            </div>
          </div>
        </aside>

        {/* Main Content */}
        <main className="blog-main">
          <div className="blog-header">
            <div className="blog-stats">
              <span className="stats-text">
                T√¨m th·∫•y <strong>{filteredPosts.length}</strong> b√†i vi·∫øt
                {selectedCategory !== 'all' &&
                  ` trong "${categories.find((c) => c.id === selectedCategory)?.name}"`}
              </span>
            </div>
          </div>

          {currentPosts.length > 0 ? (
            <div className="blog-grid">
              {currentPosts.map((post) => (
                <article key={post.id} className="blog-card">
                  <div className="card-image">
                    <img src={post.img} alt={post.title} />
                    <div className="card-overlay">
                      <span className="card-category">{post.category}</span>
                    </div>
                  </div>
                  <div className="card-content">
                    <div className="card-meta">
                      <span className="card-author">{post.author}</span>
                      <span className="meta-divider">‚Ä¢</span>
                      <span className="card-time">{post.time}</span>
                      <span className="meta-divider">‚Ä¢</span>
                      <span className="card-read-time">{post.readTime}</span>
                    </div>
                    <h3 className="card-title">{post.title}</h3>
                    <p className="card-excerpt">{post.excerpt}</p>
                    <div className="card-footer">
                      <div className="card-tags">
                        {post.tags.slice(0, 2).map((tag, index) => (
                          <span key={index} className="card-tag">
                            #{tag}
                          </span>
                        ))}
                      </div>
                      <div className="card-stats">
                        <span className="card-views">üëÅÔ∏è {post.views}</span>
                      </div>
                    </div>
                    <Button className="read-more-btn">ƒê·ªçc ti·∫øp</Button>
                  </div>
                </article>
              ))}
            </div>
          ) : (
            <div className="empty-state">
              <div className="empty-icon">üìÑ</div>
              <h3>Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt</h3>
              <p>Th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c ch·ªçn chuy√™n m·ª•c kh√°c</p>
              <Button
                onClick={() => {
                  setSearchText('');
                  setSelectedCategory('all');
                }}
              >
                Xem t·∫•t c·∫£ b√†i vi·∫øt
              </Button>
            </div>
          )}

          {/* Pagination */}
          {totalPages > 1 && (
            <div className="pagination">
              <Button
                disabled={currentPage === 1}
                onClick={() => setCurrentPage(currentPage - 1)}
                className="pagination-btn"
              >
                Tr∆∞·ªõc
              </Button>
              <div className="pagination-numbers">
                {Array.from({ length: totalPages }, (_, index) => (
                  <button
                    key={index}
                    className={`pagination-number ${currentPage === index + 1 ? 'active' : ''}`}
                    onClick={() => setCurrentPage(index + 1)}
                  >
                    {index + 1}
                  </button>
                ))}
              </div>
              <Button
                disabled={currentPage === totalPages}
                onClick={() => setCurrentPage(currentPage + 1)}
                className="pagination-btn"
              >
                Sau
              </Button>
            </div>
          )}
        </main>
      </div>
    </div>
  );
}
