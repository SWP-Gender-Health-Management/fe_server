import React, { useState } from 'react';
import './ConsultantProfile.css';
import { Statistic } from 'antd';
import { BookOutlined, CheckCircleOutlined, ExperimentOutlined, MessageOutlined, QuestionCircleOutlined, TeamOutlined, TrophyOutlined } from '@ant-design/icons';

const ConsultantProfile = ({ consultantData }) => {
  const [activeTab, setActiveTab] = useState('info');
  const avatar = `https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg`;

  if (!consultantData) {
    return (
      <div className="consultant-profile">
        <div className="loading-state">
          <span>‚è≥</span>
          <p>ƒêang t·∫£i th√¥ng tin h·ªì s∆°...</p>
        </div>
      </div>
    );
  }

  // Mock additional profile data
  const defaultStats = {
    consultationTypes: ['Online', 'Offline'],
  };

  const formatDate = (date) => {
    return new Date(date).toLocaleDateString('vi-VN', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });
  };

  // const formatDateTime = (date) => {
  //   return new Date(date).toLocaleString('vi-VN');
  // };

  // const getTimeAgo = (date) => {
  //   const now = new Date();
  //   const diffInMs = now - new Date(date);
  //   const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));
  //   const diffInDays = Math.floor(diffInHours / 24);

  //   if (diffInDays > 0) {
  //     return `${diffInDays} ng√†y tr∆∞·ªõc`;
  //   } else if (diffInHours > 0) {
  //     return `${diffInHours} gi·ªù tr∆∞·ªõc`;
  //   } else {
  //     return 'V·ª´a xong';
  //   }
  // };

  const getDepartment = (role) => {
    console.log("role: ", role)
    switch (role) {
      case "ADMIN":
        return "Qu·∫£n tr·ªã vi√™n";
      case "CONSULTANT":
        return "B·ªô ph·∫≠n t∆∞ v·∫•n";
      case "STAFF":
        return "Ph√≤ng x√©t nghi·ªám";
      case "MANAGER":
        return "Ph√≤ng QU·∫£n L√Ω";
      case "RECEPTIONIST":
        return "Ti·∫øp t√¢n";
      default:
        return "Kh√°ch h√†ng";
    }
  }

  return (
    <div className="consultant-profile">
      {/* Header */}
      <div className="profile-header">
        <div className="header-content">
          <h2>üë§ H·ªì s∆° c√° nh√¢n</h2>
          <p>Th√¥ng tin chi ti·∫øt v·ªÅ t√†i kho·∫£n v√† ho·∫°t ƒë·ªông c·ªßa b·∫°n</p>
        </div>
      </div>

      {/* Profile Card */}
      <div className="profile-card">
        <div className="profile-main">
          <div className="profile-avatar">
            <img src={avatar} alt={consultantData.full_name} />
          </div>

          <div className="profile-info">
            <h3>{consultantData.full_name}</h3>
            {/* <p className="specialization">{consultantData.specialization}</p> */}
            <div className="rating">
              <span className="rating-value">
                {consultantData.averageFeedBackRating} ‚≠ê ({consultantData.totalFeedBack} ƒë√°nh
                gi√°)
              </span>
            </div>
            <div className="contact-info">
              <span>üìß {consultantData.email}</span>
              <span>üìû {consultantData.phone}</span>
            </div>
          </div>
        </div>

        <div className="profile-stats">
          <div className="stat-item">
            <span className="stat-number">
              {consultantData.totalAppointments}
            </span>
            <span className="stat-label">Cu·ªôc h·∫πn</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">
              {consultantData.publishedBlogs}
            </span>
            <span className="stat-label">B√†i vi·∫øt</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">
              {consultantData.questionsAnswered}
            </span>
            <span className="stat-label">C√¢u tr·∫£ l·ªùi</span>
          </div>
          {/* <div className="stat-item">
            <span className="stat-number">{consultantData.averageFeedBackRating}</span>
            <span className="stat-label">ƒê√°nh gi√°</span>
          </div> */}
        </div>
      </div>

      {/* Tabs */}
      <div className="profile-tabs">
        <button
          className={`tab ${activeTab === 'info' ? 'active' : ''}`}
          onClick={() => setActiveTab('info')}
        >
          üìã Th√¥ng tin chi ti·∫øt
        </button>
        <button
          className={`tab ${activeTab === 'settings' ? 'active' : ''}`}
          onClick={() => setActiveTab('settings')}
        >
          ‚öôÔ∏è C√†i ƒë·∫∑t
        </button>
      </div>

      {/* Tab Content */}
      <div className="tab-content">
        {activeTab === 'info' && (
          <div className="info-tab">
            <div className="info-sections">
              <div className="info-section">
                <h4>üìã Th√¥ng tin c∆° b·∫£n</h4>
                <div className="info-grid">
                  <div className="info-row">
                    <label>H·ªç v√† t√™n:</label>
                    <span>{consultantData.full_name}</span>
                  </div>
                  <div className="info-row">
                    <label>Email:</label>
                    <span>{consultantData.email}</span>
                  </div>
                  <div className="info-row">
                    <label>S·ªë ƒëi·ªán tho·∫°i:</label>
                    <span>{consultantData.phone}</span>
                  </div>
                  <div className="info-row">
                    <label>Ng√†y tham gia:</label>
                    <span>{formatDate(consultantData.created_at)}</span>
                  </div>

                </div>
              </div>

              <div className="info-section">
                <h4>üè• Th√¥ng tin chuy√™n m√¥n</h4>
                <div className="info-grid">
                  <div className="info-row">
                    <label>H√¨nh th·ª©c t∆∞ v·∫•n:</label>
                    <div className="consultation-types">
                      {defaultStats.consultationTypes.map((type, index) => (
                        <span key={index} className="type-tag">
                          {type}
                        </span>
                      ))}
                    </div>
                  </div>
                  <div className="info-row">
                    <label>Ph√≤ng Ban: </label>
                    <span> {getDepartment(consultantData.role)} </span>
                  </div>
                </div>
              </div>

            </div>
          </div>
        )}

        {activeTab === 'activity' && (
          <div className="activity-tab">
            <div className="activity-stats">
              <div className="stat-card">
                <h4>Hi·ªáu su·∫•t t∆∞ v·∫•n</h4>
                <div className="performance-metrics">
                  <div className="metric">
                    {/* <span className="metric-value">
                      {consultantData.completedAppointments}/
                      {consultantData.totalAppointments}
                    </span>
                    <span className="metric-label">Cu·ªôc h·∫πn ho√†n th√†nh</span> */}
                    <Statistic
                      title="T·ªïng s·ªë cu·ªôc h·∫πn"
                      value={consultantData.totalAppointments}
                      prefix={<TeamOutlined />}
                      valueStyle={{ color: '#3f8600' }}
                    />
                  </div>
                  <div className="metric">
                    {/* <span className="metric-value">
                      {(
                        (consultantData.completedAppointments /
                          consultantData.totalAppointments) *
                        100
                      ).toFixed(1)}
                      %
                    </span>
                    <span className="metric-label">T·ª∑ l·ªá ho√†n th√†nh</span> */}
                    <Statistic
                      title="ƒê√£ ho√†n th√†nh"
                      value={consultantData.completedAppointments}
                      prefix={<CheckCircleOutlined />}
                      valueStyle={{ color: '#1890ff' }}
                    />
                  </div>
                  <div className="metric">
                    {/* <span className="metric-value">
                      {(
                        (consultantData.completedAppointments /
                          consultantData.totalAppointments) *
                        100
                      ).toFixed(1)}
                      %
                    </span>
                    <span className="metric-label">T·ª∑ l·ªá ho√†n th√†nh</span> */}
                    <Statistic
                      title="T·ª∑ l·ªá ho√†n th√†nh"
                      value={(
                        (consultantData.completedAppointments /
                          consultantData.totalAppointments) *
                        100
                      ).toFixed(1)}
                      precision={1}
                      suffix="%"
                      prefix={<TrophyOutlined />}
                      valueStyle={{ color: '#52c41a' }}
                    />
                  </div>
                </div>
              </div>

              <div className="stat-card">
                <h4>Ho·∫°t ƒë·ªông n·ªôi dung</h4>
                <div className="content-metrics">
                  <div className="metric">
                    {/* <span className="metric-value">
                      {consultantData.publishedBlogs}/
                      {consultantData.totalBlogs}
                    </span>
                    <span className="metric-label">B√†i vi·∫øt ƒë√£ xu·∫•t b·∫£n</span> */}
                    <Statistic
                      title="B√†i Vi·∫øt Xu·∫•t B·∫£n"
                      value={`${consultantData.publishedBlogs}/
                      ${consultantData.totalBlogs}`}
                      prefix={<BookOutlined />}
                      valueStyle={{ color: '#722ed1' }}
                    />
                  </div>
                  <div className="metric">
                    {/* <span className="metric-value">
                      {consultantData.questionsAnswered}
                    </span>
                    <span className="metric-label">C√¢u h·ªèi ƒë√£ tr·∫£ l·ªùi</span> */}
                    <Statistic
                      title="C√¢u h·ªèi ƒë√£ tr·∫£ l·ªùi"
                      value={consultantData.questionsAnswered}
                      prefix={<QuestionCircleOutlined />}
                      valueStyle={{ color: '#722ed1' }}
                    />
                  </div>
                </div>
              </div>
            </div>

            {/* <div className="recent-activities">
              <h4>üïí Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h4>
              <div className="activities-list">
                {recentActivities.map((activity) => (
                  <div key={activity.id} className="activity-item">
                    <div className="activity-icon">{activity.icon}</div>
                    <div className="activity-content">
                      <p>{activity.description}</p>
                      <span className="activity-time">
                        {getTimeAgo(activity.time)}
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            </div> */}
          </div>
        )}

        {activeTab === 'settings' && (
          <div className="settings-tab">
            <div className="settings-note">
              <div className="note-icon">‚ÑπÔ∏è</div>
              <div className="note-content">
                <h4>Th√¥ng b√°o quan tr·ªçng</h4>
                <p>
                  Th√¥ng tin c√° nh√¢n c·ªßa b·∫°n ƒë∆∞·ª£c qu·∫£n l√Ω b·ªüi Administrator. N·∫øu
                  b·∫°n c·∫ßn thay ƒë·ªïi th√¥ng tin nh∆∞ t√™n, email, chuy√™n khoa ho·∫∑c
                  c√°c th√¥ng tin kh√°c, vui l√≤ng li√™n h·ªá v·ªõi qu·∫£n tr·ªã vi√™n h·ªá
                  th·ªëng.
                </p>
              </div>
            </div>

            <div className="settings-sections">
              <div className="settings-section">
                <h4>üîê B·∫£o m·∫≠t t√†i kho·∫£n</h4>
                <div className="security-info">
                  <div className="security-item">
                    <span className="security-label">
                      Tr·∫°ng th√°i t√†i kho·∫£n:
                    </span>
                    {consultantData.is_banned ? (
                      <span className="status-active" style={{color: "red"}} >B·ªã Ban</span>
                    ) : (
                      <span className="status-active">‚úÖ ƒêang ho·∫°t ƒë·ªông</span>
                    )}

                  </div>
                  <div className="security-item">
                    <span className="security-label">Phi√™n ƒëƒÉng nh·∫≠p:</span>
                    <span className="session-info">
                      ƒêang ho·∫°t ƒë·ªông t·ª´ thi·∫øt b·ªã n√†y
                    </span>
                  </div>
                </div>
              </div>

              <div className="settings-section">
                <h4>üìû H·ªó tr·ª£</h4>
                <div className="support-info">
                  <p>N·∫øu b·∫°n g·∫∑p v·∫•n ƒë·ªÅ k·ªπ thu·∫≠t ho·∫∑c c·∫ßn h·ªó tr·ª£:</p>
                  <div className="support-contacts">
                    <div className="support-item">
                      <span>üìß Email h·ªó tr·ª£:</span>
                      <a href="mailto:support@clinic.com">support@clinic.com</a>
                    </div>
                    <div className="support-item">
                      <span>üìû Hotline:</span>
                      <a href="tel:1900-1234">1900-1234</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div >
  );
};

export default ConsultantProfile;
