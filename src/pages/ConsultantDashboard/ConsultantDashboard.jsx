import React from 'react';
import {
  Routes,
  Route,
  Navigate,
  useNavigate,
  useLocation,
} from 'react-router-dom';
import ConsultantProfile from '@components/ConsultDshBrd/ConsultProfile/ConsultantProfile';
import ConsultantAppointment from '@components/ConsultDshBrd/ConsultAppoint/ConsultantAppointment';
import ConsultantQuestion from '@components/ConsultDshBrd/ConsultQuest/ConsultantQuestion';
import ConsultantBlog from '@components/ConsultDshBrd/ConsultBlog/ConsultantBlog';
import './ConsultantDashboard.css';

// New Dashboard Overview Component
const DashboardOverview = () => {
  const navigate = useNavigate();
  const consultantName = sessionStorage.getItem('full_name') || 'T∆∞ v·∫•n vi√™n';

  // Mock stats data
  const stats = [
    {
      title: 'L·ªãch h·∫πn h√¥m nay',
      value: '8',
      icon: 'üìÖ',
      color: 'blue',
      description: '3 ch·ªù x√°c nh·∫≠n, 5 ƒë√£ x√°c nh·∫≠n',
    },
    {
      title: 'C√¢u h·ªèi ch∆∞a tr·∫£ l·ªùi',
      value: '12',
      icon: '‚ùì',
      color: 'orange',
      description: 'C·∫ßn tr·∫£ l·ªùi trong 24h',
    },
    {
      title: 'Blog ƒë√£ ƒëƒÉng',
      value: '24',
      icon: 'üìù',
      color: 'green',
      description: '18 ƒë√£ duy·ªát, 6 ch·ªù duy·ªát',
    },
    {
      title: 'ƒê√°nh gi√° trung b√¨nh',
      value: '4.8',
      icon: '‚≠ê',
      color: 'purple',
      description: 'T·ª´ 156 l∆∞·ª£t ƒë√°nh gi√°',
    },
  ];

  const quickActions = [
    {
      title: 'Xem l·ªãch h·∫πn',
      description: 'Qu·∫£n l√Ω l·ªãch t∆∞ v·∫•n h√¥m nay',
      icon: 'üìÖ',
      action: () => navigate('/consultant/appointments'),
      color: 'blue',
    },
    {
      title: 'Tr·∫£ l·ªùi c√¢u h·ªèi',
      description: 'Xem c√¢u h·ªèi c·∫ßn tr·∫£ l·ªùi',
      icon: 'üí¨',
      action: () => navigate('/consultant/questions'),
      color: 'orange',
    },
    {
      title: 'Vi·∫øt blog m·ªõi',
      description: 'Chia s·∫ª ki·∫øn th·ª©c chuy√™n m√¥n',
      icon: '‚úèÔ∏è',
      action: () => navigate('/consultant/blogs'),
      color: 'green',
    },
    {
      title: 'C·∫≠p nh·∫≠t h·ªì s∆°',
      description: 'Ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n',
      icon: 'üë§',
      action: () => navigate('/consultant/profile'),
      color: 'purple',
    },
  ];

  const recentActivities = [
    {
      type: 'appointment',
      message: 'L·ªãch h·∫πn v·ªõi Nguy·ªÖn Th·ªã A l√∫c 14:00',
      time: '2 gi·ªù tr∆∞·ªõc',
      status: 'completed',
    },
    {
      type: 'question',
      message: 'Tr·∫£ l·ªùi c√¢u h·ªèi v·ªÅ chu k·ª≥ kinh nguy·ªát',
      time: '3 gi·ªù tr∆∞·ªõc',
      status: 'completed',
    },
    {
      type: 'blog',
      message: 'Blog "ChƒÉm s√≥c s·ª©c kh·ªèe ph·ª• n·ªØ" ƒë∆∞·ª£c duy·ªát',
      time: '5 gi·ªù tr∆∞·ªõc',
      status: 'approved',
    },
    {
      type: 'appointment',
      message: 'Nh·∫≠n l·ªãch h·∫πn m·ªõi t·ª´ Tr·∫ßn VƒÉn B',
      time: '1 ng√†y tr∆∞·ªõc',
      status: 'pending',
    },
  ];

  return (
    <div className="dashboard-overview">
      {/* Welcome Section */}
      <div className="welcome-section">
        <div className="welcome-content">
          <h1>Ch√†o m·ª´ng, {consultantName}! üëã</h1>
          <p>
            H√¥m nay l√† ng√†y tuy·ªát v·ªùi ƒë·ªÉ gi√∫p ƒë·ª° b·ªánh nh√¢n. H√£y xem t·ªïng quan
            ho·∫°t ƒë·ªông c·ªßa b·∫°n.
          </p>
        </div>
        <div className="current-time">
          <div className="time">
            {new Date().toLocaleTimeString('vi-VN', {
              hour: '2-digit',
              minute: '2-digit',
            })}
          </div>
          <div className="date">
            {new Date().toLocaleDateString('vi-VN', {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })}
          </div>
        </div>
      </div>

      {/* Stats Cards */}
      <div className="stats-grid">
        {stats.map((stat, index) => (
          <div key={index} className={`stat-card ${stat.color}`}>
            <div className="stat-icon">{stat.icon}</div>
            <div className="stat-content">
              <div className="stat-value">{stat.value}</div>
              <div className="stat-title">{stat.title}</div>
              <div className="stat-description">{stat.description}</div>
            </div>
          </div>
        ))}
      </div>

      {/* Quick Actions */}
      <div className="quick-actions-section">
        <h2>Thao t√°c nhanh</h2>
        <div className="quick-actions-grid">
          {quickActions.map((action, index) => (
            <div
              key={index}
              className={`quick-action-card ${action.color}`}
              onClick={action.action}
            >
              <div className="action-icon">{action.icon}</div>
              <div className="action-content">
                <h3>{action.title}</h3>
                <p>{action.description}</p>
              </div>
              <div className="action-arrow">‚Üí</div>
            </div>
          ))}
        </div>
      </div>

      {/* Recent Activities */}
      <div className="recent-activities-section">
        <h2>Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h2>
        <div className="activities-list">
          {recentActivities.map((activity, index) => (
            <div key={index} className={`activity-item ${activity.status}`}>
              <div className="activity-icon">
                {activity.type === 'appointment' && 'üìÖ'}
                {activity.type === 'question' && '‚ùì'}
                {activity.type === 'blog' && 'üìù'}
              </div>
              <div className="activity-content">
                <div className="activity-message">{activity.message}</div>
                <div className="activity-time">{activity.time}</div>
              </div>
              <div className={`activity-status ${activity.status}`}>
                {activity.status === 'completed' && '‚úÖ'}
                {activity.status === 'approved' && '‚úÖ'}
                {activity.status === 'pending' && '‚è≥'}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

const ConsultantDashboard = () => {
  const navigate = useNavigate();
  const location = useLocation();

  const consultantName = sessionStorage.getItem('full_name') || 'T∆∞ v·∫•n vi√™n';

  const menuItems = [
    {
      path: '/consultant/dashboard',
      label: 'T·ªïng quan',
      icon: 'üè†',
    },
    {
      path: '/consultant/appointments',
      label: 'L·ªãch h·∫πn',
      icon: 'üìÖ',
    },
    {
      path: '/consultant/questions',
      label: 'H·ªèi ƒë√°p',
      icon: '‚ùì',
    },
    {
      path: '/consultant/blogs',
      label: 'Blog',
      icon: 'üìù',
    },
  ];

  const handleMenuClick = (path) => {
    navigate(path);
  };

  return (
    <div className="consultant-dashboard">
      {/* Enhanced horizontal menu */}
      <div className="consultant-submenu">
        <div className="submenu-content">
          {/* Logo section */}
          <div className="submenu-brand">
            <div className="brand-icon">üë©‚Äç‚öïÔ∏è</div>
            <div className="brand-text">
              <span className="brand-title">T∆∞ v·∫•n vi√™n</span>
              <span className="brand-subtitle">Dashboard</span>
            </div>
          </div>

          {/* Navigation menu */}
          <nav className="horizontal-nav">
            {menuItems.map((item) => (
              <button
                key={item.path}
                className={`nav-item ${location.pathname === item.path ? 'active' : ''}`}
                onClick={() => handleMenuClick(item.path)}
              >
                <span className="nav-icon">{item.icon}</span>
                <span className="nav-label">{item.label}</span>
              </button>
            ))}
          </nav>

          {/* User info with avatar */}
          <div className="submenu-user">
            <div className="user-avatar">
              <img
                src="/src/assets/doctor.jpg"
                alt="Avatar"
                onError={(e) => (e.target.style.display = 'none')}
              />
              <span className="user-avatar-fallback">üë§</span>
            </div>
            <div className="user-info">
              <span className="user-name">{consultantName}</span>
              <span className="user-role">Chuy√™n gia t∆∞ v·∫•n</span>
            </div>
          </div>
        </div>
      </div>

      {/* Main content area */}
      <div className="consultant-main">
        <Routes>
          <Route
            path="/"
            element={<Navigate to="/consultant/dashboard" replace />}
          />
          <Route path="/dashboard" element={<DashboardOverview />} />
          <Route path="/profile" element={<ConsultantProfile />} />
          <Route path="/appointments" element={<ConsultantAppointment />} />
          <Route path="/questions" element={<ConsultantQuestion />} />
          <Route path="/blogs" element={<ConsultantBlog />} />
        </Routes>
      </div>
    </div>
  );
};

export default ConsultantDashboard;
