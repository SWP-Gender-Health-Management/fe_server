import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import LineChart from '../Chart/LineChart';
import './Dashboard.css';

const Dashboard = () => {
  const navigate = useNavigate();
  const [kpiData, setKpiData] = useState({
    totalUsers: 2847,
    newUsers: 156,
    revenue: 45200000,
    activities: 89,
  });

  const [chartData, setChartData] = useState([]);
  const [recentActivities, setRecentActivities] = useState([]);

  // Mock data for chart (30 days)
  useEffect(() => {
    const generateChartData = () => {
      const data = [];
      const today = new Date();

      for (let i = 29; i >= 0; i--) {
        const date = new Date(today);
        date.setDate(date.getDate() - i);

        const users = Math.floor(Math.random() * 20) + 5; // 5-25 users per day
        data.push({
          date: date.toISOString().split('T')[0],
          users: users,
          label: `${date.getDate()}/${date.getMonth() + 1}`,
        });
      }
      return data;
    };

    const generateRecentActivities = () => [
      {
        id: 1,
        type: 'user_register',
        message: 'Ng∆∞·ªùi d√πng m·ªõi "Nguy·ªÖn VƒÉn A" ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n',
        time: '2 ph√∫t tr∆∞·ªõc',
        icon: 'üë§',
        color: '#10b981',
      },
      {
        id: 2,
        type: 'appointment',
        message: 'Cu·ªôc h·∫πn kh√°m v·ªõi BS. Tr·∫ßn Th·ªã B ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n',
        time: '15 ph√∫t tr∆∞·ªõc',
        icon: 'üìÖ',
        color: '#3b82f6',
      },
      {
        id: 3,
        type: 'blog_approved',
        message: 'B√†i vi·∫øt "ChƒÉm s√≥c s·ª©c kh·ªèe sinh s·∫£n" ƒë√£ ƒë∆∞·ª£c duy·ªát',
        time: '1 gi·ªù tr∆∞·ªõc',
        icon: 'üìù',
        color: '#8b5cf6',
      },
      {
        id: 4,
        type: 'payment',
        message: 'Thanh to√°n 350.000ƒë cho d·ªãch v·ª• x√©t nghi·ªám ƒë√£ ho√†n t·∫•t',
        time: '2 gi·ªù tr∆∞·ªõc',
        icon: 'üí≥',
        color: '#f59e0b',
      },
      {
        id: 5,
        type: 'consultation',
        message: 'C√¢u h·ªèi t∆∞ v·∫•n m·ªõi t·ª´ ng∆∞·ªùi d√πng "user123"',
        time: '3 gi·ªù tr∆∞·ªõc',
        icon: 'üí¨',
        color: '#ef4444',
      },
      {
        id: 6,
        type: 'lab_booking',
        message: 'ƒê·∫∑t l·ªãch x√©t nghi·ªám STD Panel cho ng√†y 25/12/2024',
        time: '4 gi·ªù tr∆∞·ªõc',
        icon: 'üß™',
        color: '#06b6d4',
      },
    ];

    setChartData(generateChartData());
    setRecentActivities(generateRecentActivities());
  }, []);

  const quickActions = [
    {
      title: 'Th√™m ng∆∞·ªùi d√πng',
      description:
        'T·∫°o t√†i kho·∫£n m·ªõi cho admin, manager, staff, consultant, customer',
      icon: 'üë•',
      color: '#10b981',
      action: () => navigate('/admin/users'),
    },
    {
      title: 'Xem b√°o c√°o',
      description: 'Xem b√°o c√°o v·ªÅ ng∆∞·ªùi d√πng, doanh thu, cu·ªôc h·∫πn, ƒë√°nh gi√°',
      icon: 'üìä',
      color: '#3b82f6',
      action: () => navigate('/admin/reports'),
    },
    {
      title: 'G·ª≠i email h√†ng lo·∫°t',
      description: 'G·ª≠i email h√†ng lo·∫°t cho ng∆∞·ªùi d√πng',
      icon: 'üìß',
      color: '#f59e0b',
      action: () => navigate('/admin/bulk-email'),
    },
  ];

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
    }).format(amount);
  };

  const formatNumber = (num) => {
    return new Intl.NumberFormat('vi-VN').format(num);
  };

  return (
    <div className="dashboard">
      <div className="dashboard-header">
        <h1>B·∫£ng ƒëi·ªÅu khi·ªÉn</h1>
        <p>Ch√†o m·ª´ng quay tr·ªü l·∫°i! ƒê√¢y l√† t·ªïng quan h·ªá th·ªëng c·ªßa b·∫°n.</p>
      </div>

      {/* KPI Cards */}
      <div className="kpi-grid">
        <div className="kpi-card">
          <div
            className="kpi-icon"
            style={{
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            }}
          >
            üë•
          </div>
          <div className="kpi-content">
            <div className="kpi-label">T·ªïng s·ªë ng∆∞·ªùi d√πng</div>
            <div className="kpi-value">{formatNumber(kpiData.totalUsers)}</div>
            <div className="kpi-change positive">+12% t·ª´ th√°ng tr∆∞·ªõc</div>
          </div>
        </div>

        <div className="kpi-card">
          <div
            className="kpi-icon"
            style={{
              background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',
            }}
          >
            üìà
          </div>
          <div className="kpi-content">
            <div className="kpi-label">Ng∆∞·ªùi d√πng m·ªõi (30 ng√†y)</div>
            <div className="kpi-value">{formatNumber(kpiData.newUsers)}</div>
            <div className="kpi-change positive">+8% t·ª´ th√°ng tr∆∞·ªõc</div>
          </div>
        </div>

        <div className="kpi-card">
          <div
            className="kpi-icon"
            style={{
              background: 'linear-gradient(135deg, #f59e0b 0%, #d97706 100%)',
            }}
          >
            üí∞
          </div>
          <div className="kpi-content">
            <div className="kpi-label">Doanh thu</div>
            <div className="kpi-value">{formatCurrency(kpiData.revenue)}</div>
            <div className="kpi-change positive">+15% t·ª´ th√°ng tr∆∞·ªõc</div>
          </div>
        </div>

        <div className="kpi-card">
          <div
            className="kpi-icon"
            style={{
              background: 'linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%)',
            }}
          >
            ‚ö°
          </div>
          <div className="kpi-content">
            <div className="kpi-label">Ho·∫°t ƒë·ªông quan tr·ªçng</div>
            <div className="kpi-value">{formatNumber(kpiData.activities)}</div>
            <div className="kpi-change neutral">Trong 24h qua</div>
          </div>
        </div>
      </div>

      {/* Charts and Activity Section */}
      <div className="dashboard-main-1">
        {/* User Growth Chart */}
        <div className="chart-section">
          <div className="section-header">
            <h2>TƒÉng tr∆∞·ªüng ng∆∞·ªùi d√πng</h2>
            <p>S·ªë l∆∞·ª£ng ƒëƒÉng k√Ω m·ªõi trong 30 ng√†y qua</p>
          </div>
          <div className="chart-container">
            <LineChart data={chartData} />
          </div>
        </div>

        {/* Quick Actions */}
        <div className="quick-actions-section">
          <div className="section-header">
            <h2>Thao t√°c nhanh</h2>
            <p>C√°c ch·ª©c nƒÉng th∆∞·ªùng d√πng</p>
          </div>
          <div className="quick-actions-grid">
            {quickActions.map((action, index) => (
              <div
                key={index}
                className="quick-action-card"
                onClick={action.action}
              >
                <div
                  className="action-icon"
                  style={{ backgroundColor: action.color }}
                >
                  {action.icon}
                </div>
                <div className="action-content">
                  <div className="action-title">{action.title}</div>
                  <div className="action-description">{action.description}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
