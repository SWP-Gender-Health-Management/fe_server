import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@components/ui/button';
import { Input } from '@components/ui/input';
import './Contact.css';



const Contact = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    service: '',
    message: '',
    appointment: '',
  });

  const [loading, setLoading] = useState(false);

  const locations = [
    {
      id: 1,
      name: 'C∆° s·ªü ch√≠nh - Qu·∫≠n 1',
      address: '123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM',
      phone: '(028) 3829 1234',
      hours: '7:00 - 19:00 (Th·ª© 2 - Th·ª© 7)',
      emergency: '24/7',
      image:
        'https://images.unsplash.com/photo-1519494026892-80bbd2d6fd0d?w=600',
      services: ['Nam khoa', 'Ph·ª• khoa', 'T∆∞ v·∫•n t√¨nh d·ª•c', 'X√©t nghi·ªám'],
      specialFeatures: [
        'Ph√≤ng c·∫•p c·ª©u 24/7',
        'B√£i ƒë·ªó xe mi·ªÖn ph√≠',
        'WiFi to√†n b·ªô khu v·ª±c',
      ],
    },
    {
      id: 2,
      name: 'Chi nh√°nh - Qu·∫≠n 3',
      address: '456 V√µ VƒÉn T·∫ßn, Qu·∫≠n 3, TP.HCM',
      phone: '(028) 3932 5678',
      hours: '8:00 - 18:00 (Th·ª© 2 - Ch·ªß nh·∫≠t)',
      emergency: 'Cu·ªëi tu·∫ßn',
      image:
        'https://images.unsplash.com/photo-1631815588090-d4bfec5b1ccb?w=600',
      services: ['Kh√°m t·ªïng qu√°t', 'T∆∞ v·∫•n tr·ª±c tuy·∫øn', 'X√©t nghi·ªám nhanh'],
      specialFeatures: [
        'H·ªá th·ªëng ƒë·∫∑t l·ªãch online',
        'Ph√≤ng ch·ªù VIP',
        'D·ªãch v·ª• t·∫°i nh√†',
      ],
    },
    {
      id: 3,
      name: 'Trung t√¢m - Qu·∫≠n 7',
      address: '789 Nguy·ªÖn Th·ªã Th·∫≠p, Qu·∫≠n 7, TP.HCM',
      phone: '(028) 5412 9876',
      hours: '6:30 - 20:00 (H√†ng ng√†y)',
      emergency: 'Kh·∫©n c·∫•p 24/7',
      image:
        'https://images.unsplash.com/photo-1576091160399-112ba8d25d1f?w=600',
      services: ['Ph·∫´u thu·∫≠t', 'ƒêi·ªÅu tr·ªã chuy√™n s√¢u', 'H·ªó tr·ª£ sinh s·∫£n'],
      specialFeatures: [
        'Ph√≤ng m·ªï hi·ªán ƒë·∫°i',
        'Khoa h·ªìi s·ª©c',
        'Ph√≤ng kh√°m ri√™ng t∆∞',
      ],
    },
  ];

  const contactMethods = [
    {
      type: 'Hotline 24/7',
      value: '1900 1717',
      icon: 'üìû',
      description: 'T∆∞ v·∫•n v√† h·ªó tr·ª£ 24/7',
      color: '#ff6b6b',
    },
    {
      type: 'Email h·ªó tr·ª£',
      value: 'support@gendercare.vn',
      icon: '‚úâÔ∏è',
      description: 'G·ª≠i c√¢u h·ªèi qua email',
      color: '#4ecdc4',
    },
    {
      type: 'Zalo/WhatsApp',
      value: '0908 123 456',
      icon: 'üí¨',
      description: 'Nh·∫Øn tin tr·ª±c ti·∫øp',
      color: '#45b7d1',
    },
    {
      type: 'Telegram',
      value: '@gendercare_vn',
      icon: 'üì±',
      description: 'K√™nh t∆∞ v·∫•n Telegram',
      color: '#96ceb4',
    },
  ];

  const emergencyContacts = [
    {
      title: 'C·∫•p c·ª©u Nam khoa',
      phone: '0911 234 567',
      description: 'C√°c tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p v·ªÅ nam khoa',
      available: '24/7',
    },
    {
      title: 'C·∫•p c·ª©u Ph·ª• khoa',
      phone: '0922 345 678',
      description: 'C·∫•p c·ª©u s·∫£n ph·ª• khoa, thai ngh√©n',
      available: '24/7',
    },
    {
      title: 'T∆∞ v·∫•n HIV/AIDS',
      phone: '0933 456 789',
      description: 'H·ªó tr·ª£ t∆∞ v·∫•n v·ªÅ HIV/AIDS',
      available: '7:00 - 22:00',
    },
  ];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);


    setTimeout(() => {
      setLoading(false);
      navigate('/hoi-dap');
    }, 1000);
  };

  return (
    <div className="contact-page">
      {/* Hero Section */}
      <section className="contact-hero">
        <div className="hero-content">
          <h1 className="hero-title">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h1>
          <p className="hero-subtitle">
            Ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ b·∫°n 24/7 v·ªÅ m·ªçi v·∫•n ƒë·ªÅ s·ª©c kh·ªèe sinh s·∫£n
          </p>
          <div className="hero-contact-row">
            <div className="hero-contact-item">
              <span className="contact-icon">üìû</span>
              <div>
                <strong>Hotline 24/7</strong>
                <p>1900 1717</p>
              </div>
            </div>
            <div className="hero-contact-item">
              <span className="contact-icon">üìß</span>
              <div>
                <strong>Email</strong>
                <p>support@gendercare.vn</p>
              </div>
            </div>
            <div className="hero-contact-item">
              <span className="contact-icon">üìç</span>
              <div>
                <strong>ƒê·ªãa ch·ªâ ch√≠nh</strong>
                <p>123 Nguy·ªÖn Hu·ªá, Q.1, TP.HCM</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <div className="contact-container">
        {/* Contact Methods */}
        <section className="contact-methods-section">
          <div className="section-header">
            <h2 className="section-titles">Ph∆∞∆°ng th·ª©c li√™n h·ªá</h2>
            <p className="section-subtitle">
              Ch·ªçn c√°ch th·ª©c li√™n h·ªá ph√π h·ª£p nh·∫•t v·ªõi b·∫°n
            </p>
          </div>

          <div className="contact-methods-grid">
            {contactMethods.map((method, index) => (
              <div key={index} className="contact-method-card">
                <div
                  className="method-icon"
                  style={{ backgroundColor: method.color }}
                >
                  {method.icon}
                </div>
                <h3 className="method-type">{method.type}</h3>
                <p className="method-value">{method.value}</p>
                <p className="method-description">{method.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Emergency Contacts */}
        <section className="emergency-section">
          <div className="section-header">
            <h2 className="section-titles">Li√™n h·ªá kh·∫©n c·∫•p</h2>
            <p className="section-subtitle">
              C√°c ƒë∆∞·ªùng d√¢y n√≥ng cho tr∆∞·ªùng h·ª£p c·∫ßn h·ªó tr·ª£ g·∫•p
            </p>
          </div>

          <div className="emergency-grid">
            {emergencyContacts.map((contact, index) => (
              <div key={index} className="emergency-card">
                <div className="emergency-header">
                  <h3 className="emergency-title">{contact.title}</h3>
                  <span className="emergency-available">
                    {contact.available}
                  </span>
                </div>
                <p className="emergency-phone">{contact.phone}</p>
                <p className="emergency-description">{contact.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Contact Form & Locations */}
        <section className="form-locations-section">
          <div className="form-locations-grid">
            {/* Contact Form */}
            <div className="contact-form-container">
              <h3 className="form-title">G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h3>
              <form onSubmit={handleSubmit} className="contact-form">
                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="name">H·ªç v√† t√™n *</label>
                    <Input
                      id="name"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      placeholder="Nh·∫≠p h·ªç v√† t√™n"
                      required
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i *</label>
                    <Input
                      id="phone"
                      name="phone"
                      value={formData.phone}
                      onChange={handleInputChange}
                      placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                      required
                    />
                  </div>
                </div>

                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="email">Email</label>
                    <Input
                      id="email"
                      name="email"
                      type="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      placeholder="Nh·∫≠p email"
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="service">D·ªãch v·ª• quan t√¢m</label>
                    <select
                      id="service"
                      name="service"
                      value={formData.service}
                      onChange={handleInputChange}
                      className="form-select"
                    >
                      <option value="">Ch·ªçn d·ªãch v·ª•</option>
                      <option value="nam-khoa">Nam khoa</option>
                      <option value="phu-khoa">Ph·ª• khoa</option>
                      <option value="benh-tinh-duc">B·ªánh t√¨nh d·ª•c</option>
                      <option value="tu-van">T∆∞ v·∫•n s·ª©c kh·ªèe</option>
                      <option value="xet-nghiem">X√©t nghi·ªám</option>
                    </select>
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="appointment">Th·ªùi gian mong mu·ªën kh√°m</label>
                  <Input
                    id="appointment"
                    name="appointment"
                    type="datetime-local"
                    value={formData.appointment}
                    onChange={handleInputChange}
                  />
                </div>

                <div className="form-group">
                  <label htmlFor="message">Tin nh·∫Øn *</label>
                  <textarea
                    id="message"
                    name="message"
                    value={formData.message}
                    onChange={handleInputChange}
                    placeholder="M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ c·ªßa b·∫°n..."
                    rows="4"
                    required
                    className="form-textarea"
                  />
                </div>

                <Button type="submit" className="submit-btn" disabled={loading}>
                  {loading ? 'ƒêang g·ª≠i...' : 'G·ª≠i tin nh·∫Øn'}
                </Button>
              </form>
            </div>

            {/* Quick Contact */}
            <div className="quick-contact">
              <h3 className="quick-contact-title">Li√™n h·ªá nhanh</h3>
              <div className="quick-contact-list">
                <div className="quick-contact-item">
                  <div className="quick-icon">üïê</div>
                  <div>
                    <strong>Gi·ªù l√†m vi·ªác</strong>
                    <p>T2-T7: 7:00 - 19:00</p>
                    <p>CN: 8:00 - 17:00</p>
                  </div>
                </div>
                <div className="quick-contact-item">
                  <div className="quick-icon">üöó</div>
                  <div>
                    <strong>ƒê∆∞a ƒë√≥n mi·ªÖn ph√≠</strong>
                    <p>Trong b√°n k√≠nh 10km</p>
                    <p>ƒê·∫∑t tr∆∞·ªõc 2 ti·∫øng</p>
                  </div>
                </div>
                <div className="quick-contact-item">
                  <div className="quick-icon">üí≥</div>
                  <div>
                    <strong>Thanh to√°n</strong>
                    <p>Ti·ªÅn m·∫∑t, Th·∫ª, Chuy·ªÉn kho·∫£n</p>
                    <p>B·∫£o hi·ªÉm y t·∫ø</p>
                  </div>
                </div>
                <div className="quick-contact-item">
                  <div className="quick-icon">üåê</div>
                  <div>
                    <strong>Ng√¥n ng·ªØ h·ªó tr·ª£</strong>
                    <p>Ti·∫øng Vi·ªát, English</p>
                    <p>‰∏≠Êñá, ÌïúÍµ≠Ïñ¥</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Locations */}
        <section className="locations-section">
          <div className="section-header">
            <h2 className="section-titles">ƒê·ªãa ƒëi·ªÉm kh√°m</h2>
            <p className="section-subtitle">
              H·ªá th·ªëng c∆° s·ªü hi·ªán ƒë·∫°i ph·ª•c v·ª• b·∫°n t·∫°i nhi·ªÅu ƒë·ªãa ƒëi·ªÉm
            </p>
          </div>

          <div className="locations-grid">
            {locations.map((location) => (
              <div key={location.id} className="location-card">
                <div className="location-image">
                  <img src={location.image} alt={location.name} />
                  <div className="location-overlay">
                  </div>
                </div>

                <div className="location-content">
                  <h3 className="location-name">{location.name}</h3>
                  <div className="location-info">
                    <div className="info-item">
                      <span className="info-icon">üìç</span>
                      <p>{location.address}</p>
                    </div>
                    <div className="info-item">
                      <span className="info-icon">üìû</span>
                      <p>{location.phone}</p>
                    </div>
                    <div className="info-item">
                      <span className="info-icon">üïí</span>
                      <p>{location.hours}</p>
                    </div>
                    <div className="info-item">
                      <span className="info-icon">üö®</span>
                      <p>C·∫•p c·ª©u: {location.emergency}</p>
                    </div>
                  </div>

                  <div className="location-services">
                    <h4>D·ªãch v·ª•:</h4>
                    <div className="services-tags">
                      {location.services.map((service, index) => (
                        <span key={index} className="service-tag">
                          {service}
                        </span>
                      ))}
                    </div>
                  </div>

                  <div className="location-features">
                    <h4>Ti·ªán √≠ch:</h4>
                    <ul className="features-list">
                      {location.specialFeatures.map((feature, index) => (
                        <li key={index} className="feature-item">
                          <span className="feature-check">‚úì</span>
                          {feature}
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div className="location-actions">
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      </div>
    </div>
  );
};

export default Contact;
